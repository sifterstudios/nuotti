name: Build and Push Docker Images

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  pull_request:
    branches:
      - main
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_PREFIX: ghcr.io/sifterstudios/nuotti

jobs:
  build-and-push:
    runs-on: [self-hosted, unraid, docker]

    permissions:
      contents: read
      packages: write
    
    strategy:
      fail-fast: false
      max-parallel: 3
      matrix:
        include:
          - service: backend
            context: .
            dockerfile: Nuotti.Backend/Dockerfile
            image: backend
          
          - service: audience
            context: .
            dockerfile: Nuotti.Audience/Dockerfile
            image: audience
          
          - service: web
            context: web
            dockerfile: web/Dockerfile
            image: web
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true
          cleanup: true
          driver-opts: |
            image=moby/buildkit:latest
            network=host
          buildkitd-config-inline: |
            debug = true
            [worker.oci]
              gc = true
              gckeepstorage = "20GB"
      
      - name: Log in to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Pre-build cleanup (free disk space)
        run: |
          echo "Before prune:" && df -h || true
          docker buildx prune -af || true
          docker builder prune -af || true
          docker system prune -af --volumes || true
          echo "After prune:" && df -h || true
      
      - name: Extract metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_PREFIX }}-${{ matrix.image }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ${{ matrix.context }}
          file: ${{ matrix.dockerfile }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64,linux/arm64
      
      - name: Post-build cleanup (prune caches and images)
        if: always()
        run: |
          docker buildx prune -af || true
          docker builder prune -af || true
          docker system prune -af --volumes || true
          df -h || true
      
      - name: Image digest
        run: echo "Image built with digest ${{ steps.meta.outputs.digest }}"

