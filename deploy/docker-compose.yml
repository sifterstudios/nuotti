networks:
  nuotti:
    name: nuotti
    external: false

services:
  # --- API (ASP.NET Core) ---
  api:
    build:
      # Use repo root as context because the Dockerfile copies multiple project files (Backend + Contracts)
      context: ..
      dockerfile: Nuotti.Backend/Dockerfile
    image: nuotti/api:main            # local tag (not pushed)
    restart: unless-stopped
    env_file:
      # keep prod secrets on Unraid, not in git
      - /mnt/user/appdata/nuotti/.env.api
    environment:
      # Common ASP.NET env
      - ASPNETCORE_URLS=http://+:5210
      - ASPNETCORE_ENVIRONMENT=Production
    ports:
      - "5210:5210"                   # published for Cloudflare Tunnel
    healthcheck:
      test: [ "CMD", "curl", "-fsS", "http://localhost:5210/health/ready" ]
      interval: 15s
      timeout: 3s
      retries: 10
      start_period: 15s
    networks:
      - nuotti

  # --- Audience (Blazor WebAssembly => static via nginx) ---
  audience:
    build:
      # Use repo root as context because the Dockerfile copies multiple project files (Audience + Contracts)
      # and relies on relative paths from the solution root.
      context: ..
      dockerfile: Nuotti.Audience/Dockerfile
    image: nuotti/audience:main
    restart: unless-stopped
    env_file:
      - /mnt/user/appdata/nuotti/.env.audience
    # For nginx-based static serving:
    ports:
      - "5280:80"                     # published for Cloudflare Tunnel
    depends_on:
      api:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "wget", "-qO-", "http://localhost/" ]
      interval: 15s
      timeout: 3s
      retries: 10
      start_period: 10s
    networks:
      - nuotti

  # --- Web (SvelteKit static via nginx) ---
  web:
    build:
      context: ../web
      dockerfile: Dockerfile
    image: nuotti/web:main
    restart: unless-stopped
    env_file:
      - /mnt/user/appdata/nuotti/.env.web
    ports:
      - "5380:80"                     # published for Cloudflare Tunnel
    depends_on:
      api:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "wget", "-qO-", "http://localhost/health" ]
      interval: 15s
      timeout: 3s
      retries: 10
      start_period: 10s
    networks:
      - nuotti